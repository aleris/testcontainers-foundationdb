plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.spotless' version '6.3.0'
    id 'io.github.gradle-nexus.publish-plugin' version "1.1.0"
}

group 'io.github.aleris'
version '0.1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.testcontainers:testcontainers:1.17.3") {
        exclude group: "org.junit"
    }
    compileOnly("org.projectlombok:lombok:1.18.24")
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation("org.foundationdb:fdb-java:7.1.11")
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)

            pom {
                name.set("testcontainers-foundationdb")
                description.set("Testcontainers FoundationDB module.")
                url.set("https://github.com/aleris/testcontainers-foundationdb")
                licenses {
                    license {
                        name.set("MIT")
                        url.set("https://github.com/aleris/testcontainers-foundationdb/blob/main/LICENSE.md")
                    }
                }
                developers {
                    developer {
                        id.set("aleris")
                        name.set("Adrian Tosca")
                    }
                }
                scm {
                    connection.set("https://github.com/aleris/testcontainers-foundationdb.git")
                    url.set("https://github.com/aleris/testcontainers-foundationdb")
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign(publishing.publications["mavenJava"])
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
